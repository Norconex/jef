            ------
            Usage
            ------
            Norconex Inc.
            ------


Getting Started


  To make the best use of the JEF API, you have to carefully identify
  all tasks that makes up your program execution workflow.  All these tasks
  are refered to as "jobs".  Jobs are assembled together to obtain the desired
  workflow, refered to as a "Job Suite".    
  
  First wrap your existing jobs, or create new ones implementing the 
  {{{./apidocs/com/norconex/jef/IJob.html}IJob}} interface to accomplish the 
  required tasks.  Whenever you have more than one job, assemble/group them 
  together using one or a combination of 
  {{{./apidocs/com/norconex/jef/AsyncJobGroup.html}AsyncJobGroup}} and 
  {{{./apidocs/com/norconex/jef/SyncJobGroup.html}SyncJobGroup}}.
  
  Create and configure a 
  {{{./apidocs/com/norconex/jef/suite/JobSuite.html}IJobSuite}} with your created
  jobs.  It is highly recommended you job suite creation logic is implemented
  using {{{./apidocs/com/norconex/jef/suite/IJobSuiteFactory.html}IJobSuiteFactory}}.
  Using this factory is the preferred way to load and initialize your 
  job suites by external processes such as <<JEF Monitor>>.
  
  When you are done, run your job suite by passing it to 
  {{{./apidocs/com/norconex/jef/JobRunner.html}JobRunner.runSuite(com.norconex.jef.suite.JobSuite)}}. 

  Optionally, you can attach listeners to get notified of every 
  job-related events.  Listners and other useful classes can be found
  in the {{{./apidocs/index.html}JEF API}}.


* Code Sample

  The creation of a job suite may look like this:

+-------------------------------+
public class MyJobSuiteFactory implements IJobSuiteFactory {

    public JobSuite createJobSuite() {
        IJob rootJob = new AsyncJobGroup("asyncGroupSample", new IJob[] {
                new MyJobA(),
                new SyncJobGroup("syncGroupSample", new IJob[] {
                        new MyJobB(),
                        new MyJobC()
                }),    
                new MyJobD(),
                new MyJobE()),
        });
        JobSuite suite = new JobSuite(rootJob);
        
        // add any listners/handlers to the suite

        return suite;
    }
}
+-------------------------------+

  Then to launch the execution of a the job suite:
  
+-------------------------------+
IJobSuiteFactory factory = new MyJobSuiteFactory();
JobSuite suite = factory.createJobSuite();
JobRunner jobRunner = new JobRunner();
jobRunner.runSuite(suite);
+-------------------------------+

